services:
  # k6
  k6-container:
    build:
      context: .
      dockerfile: ./infrastructure/k6/Dockerfile
    container_name: k6-container    # command: /bin/bash
    volumes:
      - ./job:/job/
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 500m

  # influxDB 2.x
  influxdb2:
    container_name: influxdb2-${CONTAINER_NAME_SUFFIX}
    hostname: influxdb2-${CONTAINER_NAME_SUFFIX}
    build:
      context: .
      dockerfile: ./infrastructure/influxdb/Dockerfile
      target: ${INFLUXDB_CONTAINER_BUILD_TARGET}
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE}
      - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=${DOCKER_INFLUXDB_INIT_RETENTION}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - ./infrastructure/influxdb/config:/etc/influxdb2
    ports:
      - ${CONTAINER_IP}:${INFLUXDB_PORTS}:8086 # IPとPortを指定

  # Grafana
  grafana:
    container_name: grafana-${CONTAINER_NAME_SUFFIX}
    build:
      context: .
      dockerfile: ./infrastructure/grafana/Dockerfile
      target: ${GF_CONTAINER_BUILD_TARGET}
    environment:
      - GF_SERVER_ROOT_URL=http://${CONTAINER_IP}:${GF_PORTS}
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - influxdb2
    user: "472"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - ${CONTAINER_IP}:${GF_PORTS}:3000 # IPとPortを指定

  # MySQL
  mysql:
    container_name: mysql-${CONTAINER_NAME_SUFFIX}
    hostname: ${MYSQL_HOSTS}-${CONTAINER_NAME_SUFFIX} # ホスト名を明示的に指定する
    build:
      context: .
      dockerfile: ./infrastructure/mysql/Dockerfile
      target: ${MYSQL_CONTAINER_BUILD_TARGET}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TCP_PORT: ${MYSQL_PORTS}
      TZ: ${MYSQL_TZ}
    volumes:
      - ./infrastructure/mysql/conf/my.cnf:/etc/my.cnf
      - ./infrastructure/mysql/sql:/docker-entrypoint-initdb.d # 初期DBの作成等はこのディレクトリでも管理できる。
      - mysql-data:/var/lib/mysql
    ports:
      - ${CONTAINER_IP}:${MYSQL_PORTS}:3306 # IPとPortを指定
    expose:
      - ${MYSQL_PORTS}
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 18G

  # phpMyAdmin
  phpmyadmin:
    container_name: phpmyadmin-${CONTAINER_NAME_SUFFIX}
    build:
      context: .
      dockerfile: ./infrastructure/phpmyadmin/Dockerfile
      target: ${PMA_CONTAINER_BUILD_TARGET}
    environment:
      - PMA_ARBITRARY=${PMA_ARBITRARY}
      - PMA_HOSTS=${MYSQL_HOSTS}-${CONTAINER_NAME_SUFFIX}:${MYSQL_PORTS}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    ports:
      - ${CONTAINER_IP}:${PMA_PORTS}:80 # IPとPortを指定

volumes:
  influxdb-data:
  grafana-data:
  mysql-data:
